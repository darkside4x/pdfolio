const fs = require("fs");
const path = require("path");
const PDFDocument = require("pdfkit");

export default function handler(req, res) {
    if (req.method !== "POST") {
        return res.status(405).json({ error: "Method Not Allowed" });
    }
    
    const { content, title } = req.body;
    if (!content || !title) {
        return res.status(400).json({ error: "Missing content or title" });
    }
    
    try {
        const outputDir = path.join(process.cwd(), "public", "pdfs");
        fs.mkdirSync(outputDir, { recursive: true }); // Ensure directory exists

        const filePath = path.join(outputDir, `${title}.pdf`);
        const doc = new PDFDocument({ margin: 50 });
        const stream = fs.createWriteStream(filePath);
        
        doc.pipe(stream);
        
        // Title Styling
        doc.font("Helvetica-Bold").fontSize(20).text(title, { align: "center" });
        doc.moveDown();
        
        // Content Styling
        doc.font("Helvetica").fontSize(12).text(content, { align: "justify" });
        doc.moveDown(2);
        
        // Footer Handling
        doc.on("pageAdded", () => {
            addFooter(doc);
        });
        addFooter(doc);
        
        doc.end();
        
        stream.on("finish", () => {
            res.status(200).json({ message: "PDF generated successfully", url: `/pdfs/${title}.pdf` });
        });
    } catch (error) {
        console.error("PDF generation error:", error);
        res.status(500).json({ error: "Internal Server Error" });
    }
}

function addFooter(doc) {
    doc.fontSize(10).fillColor("gray").text("Generated by PDFolio", 50, doc.page.height - 50, { align: "center", width: doc.page.width - 100 });
}
