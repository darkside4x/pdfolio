// pages/api/generate-pdf.js
import PDFDocument from 'pdfkit';
import { storeFileInGridFS } from '../../utils/mongodb';

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method Not Allowed' });
  }
  
  const { content, title } = req.body;
  if (!content || !title) {
    return res.status(400).json({ error: 'Missing content or title' });
  }
  
  try {
    // Generate a safe filename (remove special characters)
    const safeTitle = title.replace(/[^a-z0-9]/gi, '_').toLowerCase();
    const filename = `${safeTitle}-${Date.now()}.pdf`;

    // Create PDF document
    const doc = new PDFDocument({ margin: 50 });
    
    // Collect PDF data in chunks
    const chunks = [];
    doc.on('data', (chunk) => chunks.push(chunk));
    
    // Add content to PDF
    // Title Styling
    doc.font('Helvetica-Bold').fontSize(20).text(title, { align: 'center' });
    doc.moveDown();
    
    // Content Styling
    doc.font('Helvetica').fontSize(12).text(content, { align: 'justify' });
    doc.moveDown(2);
    
    // Add footer
    addFooter(doc);
    
    // Handle new pages
    doc.on('pageAdded', () => {
      addFooter(doc);
    });
    
    // Finalize PDF
    doc.end();
    
    // Wait for PDF generation to complete
    const pdfBuffer = await new Promise((resolve) => {
      doc.on('end', () => {
        resolve(Buffer.concat(chunks));
      });
    });
    
    // Store PDF in MongoDB GridFS
    const fileInfo = await storeFileInGridFS(filename, pdfBuffer);
    
    // Return the file ID and endpoint to retrieve it
    res.status(200).json({ 
      message: 'PDF generated successfully', 
      fileId: fileInfo.id,
      url: `/api/pdf/${fileInfo.id}` 
    });
    
  } catch (error) {
    console.error('PDF generation error:', error);
    res.status(500).json({ error: 'Internal Server Error', details: error.message });
  }
}

function addFooter(doc) {
  doc.fontSize(10).fillColor('gray').text('Generated by PDFolio', 50, doc.page.height - 50, { align: 'center', width: doc.page.width - 100 });
}
